module coq-semantics/refersto

imports
  signatures/NameBindingLanguage-sig
  generation/util
  coq-semantics/Coq
  coq-semantics/patterns
  coq-semantics/main
  
rules
  
  refers-to-to-coq(|c, pattern):
    RefClause([RefClausePart(All(), NamespaceRef(CurrentLanguage(), ns), VarRef(x), [], Current(), [])]) ->
      ConsDecl($[[c]_refers_to_[ns]], [Bind(x), binder*], coq-term-type)
    where
      (coqterm, binder*, _, Some(k)) := <pattern-to-term(|0, Some(x))> pattern
    with
      coq-term-type := COQ_TERM_TYPE("refers_toR", coqterm, x, $[[ns]NS], k)
