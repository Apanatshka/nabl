module nabl2/runtime/solver/errors

imports

  runtime/editor/origins

  nabl2shared
  nabl2/runtime/common/-
  nabl2/runtime/prelude/-
  nabl2/runtime/solver/-

rules

  detail-messages(|detailmsg) = map(detail-message(|detailmsg))

  detail-message(|detailmsg): Message(kind,msg,pos) -> Message(kind,msg',pos)
    with if Default() := msg then
           msg' := detailmsg
         else
           msg*  := <is-list <+ MkSingleton> msg;
           dmsg* := <is-list <+ MkSingleton> detailmsg;
           msg'  := [msg*," (",dmsg*,")"]
         end

  default-messages(|defaultmsg) = map(default-message(|defaultmsg))

  default-message(|defaultmsg): Message(kind,msg,pos) -> Message(kind,msg',pos)
    with if Default() := msg then
           msg' := defaultmsg
         else
           msg' := msg
         end

  add-messages(s|msginfo*): sol -> sol'
    with sol' := <foldr(!sol,add-message-step(s))> msginfo*

  add-message(s|msginfo): sol -> sol'
    with Message(kind,msg,pos) := <s> msginfo
    where <is-list> pos
    with sol' := <map(!Message(kind,msg,<id>));
                  foldr(!sol,add-message-step(s))> pos

  add-message(s|msginfo): sol -> sol'
    with Message(kind,msg,pos) := <s> msginfo
    where <not(is-list)> pos
    with msg' := <pp-NaBL2-MessageContent> msg;
         sol' := <add-message> (kind,(pos,msg'),sol)

  add-message-step(s) = ?(msginfo,<id>) ; add-message(s|msginfo)

  add-message: (Error(), error, sol) -> <sol-add-error(|error)> sol
  add-message: (Warning(), warning, sol) -> <sol-add-warning(|warning)> sol
  add-message: (Note(), note, sol) -> <sol-add-note(|note)> sol

  message-eq =
    where(eq;(Fst;origin-location-offset,Fst;origin-location-offset);eq)

rules

  postprocess-errors(|rn*): (sol,c*) -> (sol',[])
  with <sol-t;free-var-messages> sol => fmsg*;
       <map({?c;get-constraint-message;detail-message(|"Unsolved")})> c* => umsg*;
       <add-messages(id|[fmsg*,umsg*])> sol;
       unresolved-refs(|rn*);
       ?sol'

  free-var-messages =
    all-vars; map(!Message(Warning(),["Free variable ",<id>],<id>))

  constraint-message = fail

  get-constraint-message =
    ?c
  ; ( (constraint-message ; default-message(|<pp-NaBL2-Constraint> c))
   <+ !Message(Error(),<pp-NaBL2-Constraint> c,None())
    )

