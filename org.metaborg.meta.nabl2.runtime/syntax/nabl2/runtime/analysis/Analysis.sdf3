module nabl2/runtime/analysis/Analysis

imports

  nabl2/shared/common/ABSTRACT
  nabl2/shared/common/Resolution
  nabl2/shared/constraints/Base

  nabl2/runtime/common/AST
  nabl2/runtime/common/Native
  nabl2/runtime/common/Resolution
  nabl2/runtime/common/ScopeGraph
  nabl2/runtime/solver/Solution

context-free syntax

  Analysis = {AnalysisResult "\n\n"}*

  AnalysisResult.Files = <
    file abbreviations :=
      <{FileEntry "\n"}*>
  >
  
  FileEntry = <<String> : <String>>

  AnalysisResult.Constraint = <
    constraint :=
      <Constraint>
  >

  AnalysisResult.InitialScopeGraph = <
    initial scope graph :=
      <ScopeGraph>
  >

  AnalysisResult.ResolutionParams = <
    resolution parameters :=
      labels          = <{AnyLabel ", "}*>
      well-formedness = <LabelRE>
      label order     = <{LabelLeq ", "}*>
  >
  
  LabelLeq = [[AnyLabel] < [AnyLabel]]

  AnalysisResult.InitialResolution = <
    initial name resolution := 
      <{FullResolution "\n"}*>
  >

  AnalysisResult.AstMetadata = <
    AST metadata := 
      <{AstMetadata "\n"}*>
  >

  AnalysisResult.CustomAnalysis = <
    custom analysis := 
      <CustomAnalysis>
  >
  CustomAnalysis.None = <none>

  AnalysisResult.Timing = <
    timing :=
      <{TimingEntry "\n"}*>
  >
  TimingEntry = <
    <String>:
      <TimingEntry2>
  >
  TimingEntry2 = <
    count = <Int>
    time  = <Real>s
  >

  AnalysisResult = SolutionComponent

  AnalysisResult.AlternativeSolutions = <
    alternative solutions := 
      <{AlternativeSolution "\n\n"}*>
  >
  AlternativeSolution = <[<Int>] <Analysis>>
